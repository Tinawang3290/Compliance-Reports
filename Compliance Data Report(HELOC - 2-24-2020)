WITH t AS(
SELECT 
  *
FROM(
  SELECT 
    product_type,
    loan_num AS Loan_Num,
    origination_funding_date AS Origination_Date,
    current_rate  AS Current_Rate,
    dlc.asset_owner_uuid_value AS Asset_Owner_UUID,
    ROW_NUMBER() OVER(PARTITION BY loan_num ORDER BY calculation_ts DESC) AS rk1
  FROM reporting.agg_daily_loan_calc dlc) t0
WHERE rk1=1 AND product_type = 'HELOC' 
),

ct AS (
SELECT 
  CASE
    WHEN IFNULL(la.state, la.profile_state) IN ('HI') THEN 'Pacific/Honolulu'
    WHEN IFNULL(la.state, la.profile_state) IN ('AK') THEN 'America/Anchorage'
    WHEN IFNULL(la.state, la.profile_state) IN ('CA','WA','OR','NV') THEN 'America/Los_Angeles'
    WHEN IFNULL(la.state, la.profile_state) IN ('AZ','UT','MT','NE','ID','NM','CO','WY') THEN 'America/Denver'
    WHEN IFNULL(la.state, la.profile_state) IN ('ND','SD','NE','KS','OK','TX','MN','IA','MO','AR','LA','WI','IL','KY','TN','MS','AL') THEN 'America/Chicago'
    WHEN IFNULL(la.state, la.profile_state) IN ('MI','IN','GA','FL','SC','NC','OH','WV','VA','PA','NY','VT','ME','NH','MA','RI','CT','NJ','DE','MD','DC') THEN 'America/New_York'
    WHEN IFNULL(la.state, la.profile_state) IS NULL THEN 'America/Los_Angeles'
    ELSE 'America/Los_Angeles'
   END AS time_zone_lookup, 
  ad.app_start_date,
  IFNULL(t.loan_num,la.application_uuid_value) AS App_UUID,
  la.application_short_id,
  t.Origination_Date,
  IFNULL(ARRAY_TO_STRING([ad.first_name,ad.last_name],' '),ARRAY_TO_STRING([lp.first_name,lp.last_name],' ')) AS Borrower_Name,
  la.status,
  IFNULL(lo.decline_reasons, lo.adverse_action_declineReasons) AS Decline_Reasons,
  IFNULL(lo.decline_codes,lo.app_checklist_summary_cancellation_details_rejection_reason_codes) AS Decline_Codes,
  ARRAY_TO_STRING(cs.rejection_reason_codes,'; ') AS New_Decline_Codes,
  la.app_amount,
  la.draw_amount,
  ROUND((la.origination_fee*la.draw_amount),2) AS Origination_fee,  
  IFNULL(ARRAY_TO_STRING([la.street1,la.street2],''),ARRAY_TO_STRING([lp.street1,lp.street2],'')) AS Street,
  IFNULL(la.city, la.profile_city) AS City,
  IFNULL(la.state, la.profile_state) AS State,
  IFNULL(la.zip, la.profile_zip) AS Zip,
  CASE 
    WHEN la.property_type IN('HOME',NULL) THEN 'PRIMARY RESIDENCE'
    ELSE la.property_type
    END AS Occupancy,
  la.ownership AS Ownership_Type, 
  la.application_reason AS Purpose_Of_Loan,
  IFNULL(lo.post_loan_adj_cltv, lo.pre_loan_adj_cltv) AS Updated_CLTV,
  IFNULL(lo.post_loan_dti,lo.pre_loan_dti)  AS Updated_DTI,
  CASE 
    WHEN lo.post_loan_adj_cltv IS NULL AND lo.pre_loan_adj_cltv IS NOT NULL AND lo.adjusted_home_value IS NOT NULL 
    THEN lo.pre_loan_adj_cltv + 15000/lo.adjusted_home_value END AS Min_Loan_CLTV,
  CAST(lo.home_value AS FLOAT64) AS Initial_AVM,
  CAST(lo.adjusted_home_value AS FLOAT64) AS Adjusted_AVM,
  CASE 
  WHEN la.uw_first_lien IS TRUE THEN 1
  WHEN la.uw_first_lien IS FALSE THEN 2
  ELSE null 
  END AS Lien_Status,
  IFNULL(t.current_rate,la.app_rate) AS Rate,
  lo.avm_fsd AS FSD,
  IFNULL(la.credit_hard_fico,la.credit_soft_fico) AS FICO_Score,
  ROUND(CAST(la.application_income AS FLOAT64),0) AS Stated_Income,
  ROUND(CAST(ad.verified_income_amount AS FLOAT64),0) AS Verified_Income,
  (la.app_term*12) AS Term_Month,
  Asset_Owner_UUID,
  ad.dob AS DOB,
  ad.email AS Email,
  ad.profile_phone_number AS Profile_Phone_Number

 FROM `figure-production.reporting.lkup_application` la

LEFT JOIN `figure-production.reporting.application_details` ad ON ad.application_uuid_value = la.application_uuid_value
LEFT JOIN `figure-production.reporting.lkup_profile` lp ON lp.identity_uuid_value =la.identity_uuid_value
LEFT JOIN t ON t.loan_num = la.application_uuid_value
JOIN reporting.agg_loan_output lo ON lo.application_uuid_value = la.application_uuid_value  
JOIN  (SELECT * FROM( SELECT application_uuid.value, cancellation_details.rejection_reason_codes,
ROW_NUMBER() OVER (PARTITION BY application_uuid.value ORDER BY kafka_timestamp DESC) AS rk
FROM rpt_staging.stg_app_checklist_summary ) w
WHERE rk= 1) cs ON cs.value = la.application_uuid_value
),

-- SELECT * FROM CT
-- WHERE (Decline_Codes IS NULL AND New_Decline_Codes IS NOT NULL) 

-- To get the date when application signed Prom note
r AS( 
SELECT
  application_uuid_value,
  stage,
  stage_exit_ts 
FROM  reporting.figure_funnel_event
WHERE  stage_num = 6.25
),

-- To get the stage of the table
rr  AS (
SELECT
  ROW_NUMBER() OVER(PARTITION BY application_uuid_value ORDER BY stage_entry_ts DESC) AS rk,
  fe.*
FROM reporting.figure_funnel_event fe
),

 -- To get the datatime when a loan is in terminal status (funded, cancelled, declined) .
 -- For funded loans, We need to get datetime of signing prom note 
cr AS (
SELECT
  * 
FROM (
  SELECT
  rr.application_uuid_value,
  rr.stage,
  rr.stage_num,       
  CASE 
  WHEN (rr.rk =1 AND rr.stage_num IN(9,10.5,11)) OR rr.stage_num = 11 THEN IFNULL(r.stage_exit_ts,rr.stage_entry_ts)
  WHEN rr.rk =1 AND rr.stage_num IN (98,99) THEN rr.stage_entry_ts
  END AS Decision_Datetime,
  'HELOC' AS Loan_Type
  FROM rr
LEFT JOIN r ON r.application_uuid_value = rr.application_uuid_value) r0
WHERE Decision_Datetime IS NOT NULL),

RF AS(SELECT 
  DATETIME(ct.app_start_date, ct.time_zone_lookup) AS Application_Date,
  ct.App_UUID AS Loan_Num,
  status AS Decision,
  DATETIME(Decision_Datetime, ct.time_zone_lookup) AS Decision_Date,
  ct.Borrower_Name,
  ct.Origination_Date,
  ct.Purpose_Of_Loan AS Purpose_Of_Loan,
  ct.Occupancy AS Occupancy,
  Loan_Type AS Product_Type,
  ct.Ownership_Type AS Ownership_Type,
  ct.Street AS Property_Address,
  ct.City AS City,
  ct.State AS State,
  ct.Zip AS Zip,
  ct.Initial_AVM,
  ct.Adjusted_AVM,
  ct.Rate AS APR,
  ct.Lien_Status,
  ct.Term_Month AS Term_Month,
  ct.Origination_fee,
  ct.draw_amount AS Initial_Draw_Amount,
  ct.app_amount AS Loan_Amount,
  ct.FICO_Score AS FICO_Score,
  ct.FSD AS FSD,
  ROUND(ct.Updated_CLTV,4) AS CLTV,
  ROUND(ct.Min_Loan_CLTV,4) AS Min_Loan_CLTV,
  ct.Updated_DTI AS DTI,
  ct.Stated_Income AS Stated_Income,
  ct.Verified_Income AS Verified_Income,
  ct.Decline_Codes AS Decline_Codes,
  ct.Decline_Reasons AS Decline_Reasons,
  Asset_Owner_UUID   
FROM cr
JOIN ct ON ct.App_UUID = cr.application_uuid_value
)

SELECT 
  *
FROM(SELECT
  *,
  ROW_NUMBER() OVER(PARTITION BY Loan_Num ORDER BY Application_Date) as R
FROM RF
WHERE Decision_Date IS NOT NULL) d
WHERE R=1 AND Decision = 'DECLINED' AND Decision IN ('DECLINED','CANCELLED','COMPLETE','RESCISSION','RECORDING') 
ORDER BY 1 DESC
